<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>special_wen&#39;s Blog</title>
  
  <subtitle>不忘初心 方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.prozin.xyz/"/>
  <updated>2017-11-17T05:13:49.089Z</updated>
  <id>http://blog.prozin.xyz/</id>
  
  <author>
    <name>zxw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>淡入淡出js原生实现，css实现</title>
    <link href="http://blog.prozin.xyz/2017/11/17/%E6%B7%A1%E5%85%A5%E6%B7%A1%E5%87%BAjs%E5%8E%9F%E7%94%9F%E5%AE%9E%E7%8E%B0%EF%BC%8Ccss%E5%AE%9E%E7%8E%B0/"/>
    <id>http://blog.prozin.xyz/2017/11/17/淡入淡出js原生实现，css实现/</id>
    <published>2017-11-17T04:18:06.000Z</published>
    <updated>2017-11-17T05:13:49.089Z</updated>
    
    <content type="html"><![CDATA[<p>#淡入淡出效果</p><h2 id="js原生实现"><a href="#js原生实现" class="headerlink" title="js原生实现"></a>js原生实现</h2><h3 id="js封装fadeIn-fadeOut-函数的实现"><a href="#js封装fadeIn-fadeOut-函数的实现" class="headerlink" title="js封装fadeIn(),fadeOut()函数的实现"></a>js封装fadeIn(),fadeOut()函数的实现</h3><ul><li>fadeIn()</li></ul><blockquote><p>将需要淡入的元素在css样式中添加<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```html</span><br><span class="line">    (function () &#123;</span><br><span class="line">            ele.style.opacity = opa;</span><br><span class="line">            opa = opa +10;</span><br><span class="line">            if(opa &lt;= opacity)&#123;</span><br><span class="line">                setTimeout(arguments.callee,speed);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)();</span><br></pre></td></tr></table></figure></p><p>通过<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- fadeOut()</span><br><span class="line"></span><br><span class="line">&gt; 在js中将需要淡出的元素的style的display更改属性为none.设置隐藏。并不断的将透明度改为0.原理和淡入一样。</span><br><span class="line"></span><br><span class="line">源码地址：https://github.com/special-wen/demo/tree/master/demo_fadeInOut/js%E5%8E%9F%E7%94%9F</span><br><span class="line"></span><br><span class="line">## css实现</span><br><span class="line">### 实现鼠标移入时淡入鼠标移除时淡出</span><br><span class="line"></span><br><span class="line">- transition</span><br><span class="line"></span><br><span class="line">#### 利用css3新增的属性transition实现。</span><br><span class="line"></span><br><span class="line">```css</span><br><span class="line">#demo li&#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">    font-size: 18px;</span><br><span class="line">    color: #8fa1c7;</span><br><span class="line">    transition: opacity 2s;</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#demo li:hover&#123;</span><br><span class="line">    opacity: 1;</span><br><span class="line">    transition-duration: 0s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>transition:opacity 2s</code>表示为改变属性opacity:0一共2s。当鼠标移入时，将透明度更改为1</p></blockquote><p>源码地址：<a href="https://github.com/special-wen/demo/tree/master/demo_fadeInOut/css%E5%AE%9E%E7%8E%B0" target="_blank" rel="external">https://github.com/special-wen/demo/tree/master/demo_fadeInOut/css%E5%AE%9E%E7%8E%B0</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#淡入淡出效果&lt;/p&gt;
&lt;h2 id=&quot;js原生实现&quot;&gt;&lt;a href=&quot;#js原生实现&quot; class=&quot;headerlink&quot; title=&quot;js原生实现&quot;&gt;&lt;/a&gt;js原生实现&lt;/h2&gt;&lt;h3 id=&quot;js封装fadeIn-fadeOut-函数的实现&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>DEMO_表格操作</title>
    <link href="http://blog.prozin.xyz/2017/11/15/DEMO-%E8%A1%A8%E6%A0%BC%E6%93%8D%E4%BD%9C/"/>
    <id>http://blog.prozin.xyz/2017/11/15/DEMO-表格操作/</id>
    <published>2017-11-15T13:59:20.000Z</published>
    <updated>2017-11-15T14:00:07.645Z</updated>
    
    <content type="html"><![CDATA[<h3 id="在html中的等标签就可以实现一些简单的操作。那么为什么还需要用复杂的代码去实现那。简单的说，一般的管理系统用动态管理表格还是比较方便的。例如我们的课程设计ttms：添加人员删除人员修改人员之类的。"><a href="#在html中的等标签就可以实现一些简单的操作。那么为什么还需要用复杂的代码去实现那。简单的说，一般的管理系统用动态管理表格还是比较方便的。例如我们的课程设计ttms：添加人员删除人员修改人员之类的。" class="headerlink" title="在html中的等标签就可以实现一些简单的操作。那么为什么还需要用复杂的代码去实现那。简单的说，一般的管理系统用动态管理表格还是比较方便的。例如我们的课程设计ttms：添加人员删除人员修改人员之类的。"></a>在html中的<td></td><tr>等标签就可以实现一些简单的操作。那么为什么还需要用复杂的代码去实现那。简单的说，一般的管理系统用动态管理表格还是比较方便的。例如我们的课程设计ttms：添加人员删除人员修改人员之类的。</tr></h3><h3 id="记录一下这次做的表格操作用到一些demo"><a href="#记录一下这次做的表格操作用到一些demo" class="headerlink" title="记录一下这次做的表格操作用到一些demo."></a>记录一下这次做的表格操作用到一些demo.</h3><ul><li><p>表格的动态添加：主要实现表格的动态添加,动态添加表格的一行，当然这个一行是指一行数据</p><blockquote><p>通过用insertRow()方法实现插入行;通过insertCell()方法实现单元格元素的插入</p></blockquote></li><li><p>表格的动态删除：主要通过实现表格的删除操作，删除指定行和删除表格中所有内容</p><blockquote><p>通过使用deleteRow(index)方法删除表格行。index为参数，表示第几行，这个参数时从上向下，由0开始数的， 另外有特别需要注意的一点：如果参数不写，则效果与参数为0一样，表示删除最上面一行 相对应的是，deleteCol(index)方法是删除单元格</p></blockquote></li><li><p>表格的单元行的操作：主要实现表格的鼠标事件。鼠标的移入移出以及鼠标的点击事件</p><blockquote><p>通过方法event.srcElement.tagName方法和event.srcElement.parentElement方法实现。 event是触发事件的源对象，而srcElement则就是选中对象，而parentElement则是选中对象的父层对象； 以当前的例子来简单解释的话，就是说，鼠标放上table，从而激活了事件getrow（this）， 当鼠标放在任一单元格之上时，它的srcElement都是td，它的parentElement也就是tr一行了，则找到一行的对象了</p></blockquote></li><li><p>表格的动态生成：通过表格的动态添加实现。利用在上面提到的insertRow()实现。</p><blockquote><p>在html中我们只给出body中的代码，在其中只需要创建一个div,对div进行表格的插入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">"create_table"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote></li></ul><blockquote><p>js代码中主要的就是实现表格的生成。</p></blockquote><ul><li>createElement()方法实现html中标签的动态创建。</li><li>appendChild()方法实现将创建的标签添加给需要对应的父节点</li><li>setAttribute(“class”,”value”)方法实现给对应的标签添加属性。class为属性名，value为对应的属性。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> <span class="title">create_table</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> table = <span class="built_in">document</span>.createElement(<span class="string">'table'</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">1</span>; i &lt;=<span class="number">4</span>; i++) &#123;</span><br><span class="line">             <span class="keyword">let</span> row = table.insertRow();</span><br><span class="line">             <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">1</span>; j &lt;= <span class="number">2</span>; j++) &#123;</span><br><span class="line">                  <span class="keyword">let</span> cell = row.insertCell();</span><br><span class="line">                  cell.innerHTML = <span class="string">"这里是"</span>+i +<span class="string">"行"</span> +<span class="string">','</span> + j+<span class="string">"列"</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">'createTable'</span>).appendChild(table);</span><br><span class="line">    table.setAttribute(<span class="string">'border'</span>, <span class="string">'1'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>github代码地址：<a href="https://github.com/special-wen/demo/tree/master/demo_table" target="_blank" rel="external">https://github.com/special-wen/demo/tree/master/demo_table</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;在html中的等标签就可以实现一些简单的操作。那么为什么还需要用复杂的代码去实现那。简单的说，一般的管理系统用动态管理表格还是比较方便的。例如我们的课程设计ttms：添加人员删除人员修改人员之类的。&quot;&gt;&lt;a href=&quot;#在html中的等标签就可以实现一些简单的操
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>原生js座位管理</title>
    <link href="http://blog.prozin.xyz/2017/11/14/%E5%8E%9F%E7%94%9Fjs%E5%BA%A7%E4%BD%8D%E7%AE%A1%E7%90%86/"/>
    <id>http://blog.prozin.xyz/2017/11/14/原生js座位管理/</id>
    <published>2017-11-14T13:27:30.000Z</published>
    <updated>2017-11-14T13:28:12.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="以前每次做ttms中的座位管理时，用的都是插件，突然就想自己写一个原生的座位管理了。先附上一张成果图。"><a href="#以前每次做ttms中的座位管理时，用的都是插件，突然就想自己写一个原生的座位管理了。先附上一张成果图。" class="headerlink" title="以前每次做ttms中的座位管理时，用的都是插件，突然就想自己写一个原生的座位管理了。先附上一张成果图。"></a>以前每次做ttms中的座位管理时，用的都是插件，突然就想自己写一个原生的座位管理了。先附上一张成果图。</h2><blockquote><p>座位管理的界面：</p></blockquote><p><img src="http://img.blog.csdn.net/20171111174200029?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VuX3NwZWNpYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><blockquote><p>座位管理的修改座位状态:</p></blockquote><p><img src="http://img.blog.csdn.net/20171111174352428?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VuX3NwZWNpYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><blockquote><p>座位管理中修改座位状态之后：</p></blockquote><p><img src="http://img.blog.csdn.net/20171111174542003?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvd2VuX3NwZWNpYWw=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="界面有些丑陋，但是基本的功能还是已经实现了的。包括动态的生成座位，改变座位的状态。因为只是一个界面所以数据都是假数据。在之后连数据库后会进一步的完善。"><a href="#界面有些丑陋，但是基本的功能还是已经实现了的。包括动态的生成座位，改变座位的状态。因为只是一个界面所以数据都是假数据。在之后连数据库后会进一步的完善。" class="headerlink" title="界面有些丑陋，但是基本的功能还是已经实现了的。包括动态的生成座位，改变座位的状态。因为只是一个界面所以数据都是假数据。在之后连数据库后会进一步的完善。"></a>界面有些丑陋，但是基本的功能还是已经实现了的。包括动态的生成座位，改变座位的状态。因为只是一个界面所以数据都是假数据。在之后连数据库后会进一步的完善。</h2><h3 id="需要用到的技术：html-bootstrap-css-js-个人因为jq用的不熟练，所以没有选择jq"><a href="#需要用到的技术：html-bootstrap-css-js-个人因为jq用的不熟练，所以没有选择jq" class="headerlink" title="需要用到的技术：html,bootstrap,css,js;(个人因为jq用的不熟练，所以没有选择jq)"></a>需要用到的技术：html,bootstrap,css,js;(个人因为jq用的不熟练，所以没有选择jq)</h3><h3 id="代码可能有些繁琐，大家可以优化代码，我个人也会持续优化"><a href="#代码可能有些繁琐，大家可以优化代码，我个人也会持续优化" class="headerlink" title="代码可能有些繁琐，大家可以优化代码，我个人也会持续优化;"></a>代码可能有些繁琐，大家可以优化代码，我个人也会持续优化;</h3><h3 id="首先，关于座位的动态生成："><a href="#首先，关于座位的动态生成：" class="headerlink" title="首先，关于座位的动态生成："></a>首先，关于座位的动态生成：</h3><h4 id="在之前中，写到了动态生成表格。其实思想集合是相同的。可以去动态的创建图片，如果说不需要具体的座位的行列值可以直接通过两层循环动态创建图片。但如果是需要和我一样需要具体的行列值，可以尝试讲创建的座位和行列值放在一个div中去实现。主要通过"><a href="#在之前中，写到了动态生成表格。其实思想集合是相同的。可以去动态的创建图片，如果说不需要具体的座位的行列值可以直接通过两层循环动态创建图片。但如果是需要和我一样需要具体的行列值，可以尝试讲创建的座位和行列值放在一个div中去实现。主要通过" class="headerlink" title="在之前中，写到了动态生成表格。其实思想集合是相同的。可以去动态的创建图片，如果说不需要具体的座位的行列值可以直接通过两层循环动态创建图片。但如果是需要和我一样需要具体的行列值，可以尝试讲创建的座位和行列值放在一个div中去实现。主要通过"></a>在之前中，写到了动态生成表格。其实思想集合是相同的。可以去动态的创建图片，如果说不需要具体的座位的行列值可以直接通过两层循环动态创建图片。但如果是需要和我一样需要具体的行列值，可以尝试讲创建的座位和行列值放在一个div中去实现。主要通过<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">```javascript</span><br><span class="line">&apos;use strict&apos;</span><br><span class="line">let row,col;</span><br><span class="line">window.onload = function createState() &#123;</span><br><span class="line">    for(let i = 1;i&lt;=8;i++)&#123;</span><br><span class="line">        for(let j = 1;j&lt;=8;j++) &#123;</span><br><span class="line">            let one = document.createElement(&apos;div&apos;);</span><br><span class="line">         document.getElementById(&apos;seat&apos;).appendChild(one);</span><br><span class="line">            one.setAttribute(&apos;class&apos;, &apos;oneDiv&apos;);</span><br><span class="line">            let sateImage = document.createElement(&apos;img&apos;);</span><br><span class="line">            let num = document.createElement(&apos;span&apos;);</span><br><span class="line">            num.innerText = i + &apos;,&apos; + j;</span><br><span class="line">            sateImage.setAttribute(&quot;class&quot;, &quot;sate&quot;);</span><br><span class="line">            sateImage.setAttribute(&quot;id&quot;, &quot;sate&quot;+i+j);</span><br><span class="line">            sateImage.setAttribute(&apos;data-toggle&apos;, &apos;modal&apos;);</span><br><span class="line">            sateImage.src = &apos;../System_manager/image/seat.png&apos;;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h4><blockquote><p>在添加上的元素中通过setAttributet方法为他们添加样式，我就不附上自己的css代码了，大家可以根据自己的需求自己去写相应的css代码。</p><h3 id="为每一个添加的座位创建监听事件"><a href="#为每一个添加的座位创建监听事件" class="headerlink" title="为每一个添加的座位创建监听事件"></a>为每一个添加的座位创建监听事件</h3><h4 id="在上一个代码中，每一次生成一个座位为他们添加一个鼠标点击事件："><a href="#在上一个代码中，每一次生成一个座位为他们添加一个鼠标点击事件：" class="headerlink" title="在上一个代码中，每一次生成一个座位为他们添加一个鼠标点击事件："></a>在上一个代码中，每一次生成一个座位为他们添加一个鼠标点击事件：<figure class="highlight plain"><figcaption><span>function getState()&#123;&#125;);```去实现对每一个座位的操作而且这样还可以很轻易的获得正在操作的座位对应的行列号。具体实现如下：</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">```javascript</span><br><span class="line">//用于记录座位的行列：</span><br><span class="line">let row,col;</span><br><span class="line">//在上一个代码中生成座位时添加监听事件：</span><br><span class="line">sateImage.addEventListener(&apos;click&apos;, function getState() &#123;</span><br><span class="line">    row = i;</span><br><span class="line">    col = j;</span><br><span class="line">    //检测我们的代码是否正确</span><br><span class="line">    alert（&apos;第&apos; + i + &apos;行第&apos; + j + &apos;列&apos;）;</span><br><span class="line">    //获取到座位的id;</span><br><span class="line">    let select = sateImage.id;</span><br><span class="line">    //将选中的座位更改状态为选定状态：</span><br><span class="line">    document.getElementById(select).src = &apos;../System_manager/image/select.png&apos;;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></h4></blockquote><h3 id="获取到选择的座位之后，更改它们的状态"><a href="#获取到选择的座位之后，更改它们的状态" class="headerlink" title="获取到选择的座位之后，更改它们的状态"></a>获取到选择的座位之后，更改它们的状态</h3><h4 id="首先我们可以通过一个数组去存放每个座位的状态值。比如说0代表座位正常，1代表座位选中，-1代表座位坏掉，2代表改为过道。那么之后的就更加的方便去实现了。"><a href="#首先我们可以通过一个数组去存放每个座位的状态值。比如说0代表座位正常，1代表座位选中，-1代表座位坏掉，2代表改为过道。那么之后的就更加的方便去实现了。" class="headerlink" title="首先我们可以通过一个数组去存放每个座位的状态值。比如说0代表座位正常，1代表座位选中，-1代表座位坏掉，2代表改为过道。那么之后的就更加的方便去实现了。"></a>首先我们可以通过一个数组去存放每个座位的状态值。比如说0代表座位正常，1代表座位选中，-1代表座位坏掉，2代表改为过道。那么之后的就更加的方便去实现了。</h4><h4 id="选择座位后会有一个弹出框，在弹出框去选择需要对这个座位的更改，并在点击“提交更改”之后更改那个座位的图片。"><a href="#选择座位后会有一个弹出框，在弹出框去选择需要对这个座位的更改，并在点击“提交更改”之后更改那个座位的图片。" class="headerlink" title="选择座位后会有一个弹出框，在弹出框去选择需要对这个座位的更改，并在点击“提交更改”之后更改那个座位的图片。"></a>选择座位后会有一个弹出框，在弹出框去选择需要对这个座位的更改，并在点击“提交更改”之后更改那个座位的图片。</h4><blockquote><p>html代码：弹出框的实现。(通过bootstrap中的模态框生成，需要bootstrap一些相关文件的引入)<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span> <span class="attr">id</span> = <span class="string">'modal'</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">                    &amp;times;</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel"</span>&gt;</span></span><br><span class="line">                    更改座位状态</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span> = <span class="string">'title'</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">select</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span> = <span class="string">'seatState'</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> = <span class="string">'active'</span>&gt;</span>座位正常<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> = <span class="string">'broken'</span>&gt;</span>座位坏掉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> = <span class="string">'aisle'</span>&gt;</span>改为过道<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">id</span> = <span class="string">'update'</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span></span><br><span class="line">                    提交更改</span><br><span class="line">                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>这个模态框是需要点击一个东西才能会出现。所以我们需要给我们生成的座位绑定。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sateImage.setAttribute(<span class="string">'data-toggle'</span>, <span class="string">'modal'</span>);</span><br><span class="line">sateImage.setAttribute(<span class="string">'data-target'</span>, <span class="string">'#myModal'</span>);</span><br></pre></td></tr></table></figure></p><p>这样每一次我们点击之后有一个需要我们选择座位状态的弹出框出现了。</p><h4 id="获取更改的状态并將一开始的座位表更新："><a href="#获取更改的状态并將一开始的座位表更新：" class="headerlink" title="获取更改的状态并將一开始的座位表更新："></a>获取更改的状态并將一开始的座位表更新：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> row,col;</span><br><span class="line"><span class="keyword">let</span> array = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;</span><br><span class="line">    array[i] = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> j = <span class="number">0</span>;j&lt;<span class="number">8</span>;j++)&#123;</span><br><span class="line">        array[i][j] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> change = <span class="built_in">document</span>.getElementById(<span class="string">'update'</span>);</span><br><span class="line">change.onclick = <span class="function"><span class="keyword">function</span> <span class="title">changeState</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> imageId = <span class="string">"sate"</span>+row+col;</span><br><span class="line">    <span class="keyword">let</span> newState = <span class="built_in">document</span>.getElementById(imageId);</span><br><span class="line">    <span class="keyword">let</span> seatState = <span class="built_in">document</span>.getElementById(<span class="string">'seatState'</span>);</span><br><span class="line">    <span class="keyword">let</span> index = seatState.selectedIndex;</span><br><span class="line">    <span class="keyword">let</span> value = seatState.options[index].value;</span><br><span class="line">        <span class="keyword">if</span>(value == <span class="string">'active'</span>)&#123;</span><br><span class="line">    array[row<span class="number">-1</span>][col<span class="number">-1</span>] = <span class="number">0</span>;</span><br><span class="line">            newState.src = <span class="string">'../System_manager/image/seat.png'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(value == <span class="string">'broken'</span>)&#123;</span><br><span class="line">        array[row<span class="number">-1</span>][col<span class="number">-1</span>] = <span class="number">-1</span>;</span><br><span class="line">            newState.src = <span class="string">'../System_manager/image/broken.png'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(value == <span class="string">'aisle'</span>)&#123;</span><br><span class="line">        array[row<span class="number">-1</span>][col<span class="number">-1</span>] = <span class="number">2</span>;</span><br><span class="line">            newState.src = <span class="string">'../System_manager/image/aisle.png'</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完整代码实现：<br><a href="https://github.com/special-wen/demo/tree/master/demo_seat" target="_blank" rel="external">https://github.com/special-wen/demo/tree/master/demo_seat</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;以前每次做ttms中的座位管理时，用的都是插件，突然就想自己写一个原生的座位管理了。先附上一张成果图。&quot;&gt;&lt;a href=&quot;#以前每次做ttms中的座位管理时，用的都是插件，突然就想自己写一个原生的座位管理了。先附上一张成果图。&quot; class=&quot;headerlin
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.prozin.xyz/2017/11/12/hello-world/"/>
    <id>http://blog.prozin.xyz/2017/11/12/hello-world/</id>
    <published>2017-11-12T13:46:54.071Z</published>
    <updated>2017-11-12T13:46:54.071Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
